================================================================================
                  TICKFLOW - VERCEL DEPLOYMENT CHECKLIST
================================================================================

Print this page and keep it on your desk! ‚úì

================================================================================
ETAP 1: PRE-DEPLOYMENT (PRZED DEPLOYMENTEM)
================================================================================

LOKALNIE (Your Computer):
  [ ] Czytam: docs/VERCEL_README.md (15 min)
  [ ] npm run lint        (Brak linting errors)
  [ ] npm run build       (Build succeeds)
  [ ] npm run start       (App runs locally)
  [ ] npm test            (Tests pass)
  [ ] git status          (Nothing to commit)

GITHUB:
  [ ] Kod zacommittowany
  [ ] Kod zpushowany na main branch
  [ ] GitHub Actions workflow przeszed≈Ç

SUPABASE:
  [ ] Konto Supabase istnieje
  [ ] Projekt Supabase istnieje
  [ ] DATABASE_URL zanotowany

================================================================================
ETAP 2: VERCEL SETUP (KONFIGURACJA VERCEL)
================================================================================

VERCEL ACCOUNT:
  [ ] Zalogowany na https://vercel.com
  [ ] Konto GitHub po≈ÇƒÖczone

PROJECT CREATION:
  [ ] Projekt TickFlow utworzony w Vercel
  [ ] Repository wybrany (GitHub)
  [ ] Main branch zaznaczony
  [ ] Next.js detectowany

ENVIRONMENT VARIABLES:
  [ ] Projekt Settings ‚Üí Environment Variables otwarte
  
  [ ] DATABASE_URL ......................... (postgresql://...)
  [ ] NEXTAUTH_URL ......................... (https://tickflow.vercel.app)
  [ ] NEXTAUTH_SECRET ...................... (wygenerowany)
  [ ] NEXT_PUBLIC_SUPABASE_URL ............ (https://xxx.supabase.co)
  [ ] NEXT_PUBLIC_SUPABASE_ANON_KEY ...... (eyJ...)
  [ ] SUPABASE_SERVICE_ROLE_KEY .......... (Production ONLY!)
  [ ] JWT_SECRET ........................... (wygenerowany)
  [ ] OPENROUTER_API_KEY ................. (sk-or-v1-...) [opcjonalnie]
  [ ] NODE_ENV ............................ (production)

  Wszystkie ustawione na: Production ‚úì

================================================================================
ETAP 3: DATABASE SETUP (SUPABASE)
================================================================================

SQL MIGRATIONS:
  [ ] Supabase dashboard otwarte (https://supabase.com/dashboard)
  [ ] Projekt wybrany
  [ ] SQL Editor otwarte
  
  [ ] Migracja 1: create_enums.sql ............ RUN ‚úì
  [ ] Migracja 2: create_users_table.sql ..... RUN ‚úì
  [ ] Migracja 3: create_categories_table.sql  RUN ‚úì
  [ ] Migracja 4: subcategories.sql .......... RUN ‚úì
  [ ] Migracja 5: create_tickets_table.sql .. RUN ‚úì
  [ ] Migracja 6: agent_categories.sql ...... RUN ‚úì
  [ ] Migracja 7: rls_policies.sql .......... RUN ‚úì
  [ ] Migracja 8: agent_role_trigger.sql .... RUN ‚úì
  [ ] Migracja 9: updated_at_triggers.sql ... RUN ‚úì
  [ ] Migracja 10: add_admin_role.sql ...... RUN ‚úì

TABLE EDITOR CHECK:
  [ ] users table istnieje
  [ ] categories table istnieje
  [ ] subcategories table istnieje
  [ ] tickets table istnieje
  [ ] agent_categories table istnieje

REALTIME SETTINGS:
  [ ] Supabase: Project Settings ‚Üí Realtime
  [ ] Realtime: ENABLED

================================================================================
ETAP 4: DEPLOYMENT
================================================================================

GIT PUSH:
  [ ] git push origin main
  [ ] GitHub Actions workflow uruchomiony
  [ ] Workflow testy: PASS ‚úì

VERCEL DEPLOYMENT:
  [ ] Vercel Dashboard otwarte
  [ ] Deployments sekcja
  [ ] Nowy deployment pojawi≈Ç siƒô
  [ ] Status: "Deployment ready" ‚úì
  [ ] Build Logs: BEZ B≈ÅƒòD√ìW

TIME TO LIVE:
  [ ] ~30 sekund od push do live
  [ ] https://tickflow.vercel.app dostƒôpna

================================================================================
ETAP 5: TESTING (TESTOWANIE)
================================================================================

APLIKACJA:
  [ ] https://tickflow.vercel.app otwiera siƒô
  [ ] Strona ≈Çaduje bez b≈Çƒôd√≥w
  [ ] UI wyglƒÖda prawid≈Çowo

LOGOWANIE:
  [ ] Login form widoczny
  [ ] Mo≈ºna siƒô zalogowaƒá (test@firma.pl / Start!125)
  [ ] Sesja utrzymywana
  [ ] Logout dzia≈Ça

FUNKCJONALNO≈öƒÜ:
  [ ] Dashboard wy≈õwietla siƒô
  [ ] Mo≈ºna tworzyƒá ticket
  [ ] Tickety wy≈õwietlajƒÖ siƒô na li≈õcie
  [ ] Real-time updates dzia≈ÇajƒÖ (otw√≥rz w 2 oknach, stw√≥rz ticket w jednym)
  [ ] Status zmienia siƒô w real-time

B≈ÅƒòDY:
  [ ] Browser Console (F12): BEZ B≈ÅƒòD√ìW
  [ ] Network Tab: Wszystkie requesty 200/201
  [ ] Supabase Logs: BEZ B≈ÅƒòD√ìW

================================================================================
ETAP 6: MONITORING SETUP (MONITORING)
================================================================================

VERCEL NOTYFIKACJE:
  [ ] Project Settings ‚Üí Notifications
  [ ] Email notifikacje ENABLED
  [ ] Deployment Started: ‚úì
  [ ] Deployment Completed: ‚úì
  [ ] Deployment Error: ‚úì

MONITORING DASHBOARDS (bookmark'uj!):
  [ ] Vercel: https://vercel.com/dashboard
  [ ] Supabase: https://supabase.com/dashboard
  [ ] GitHub Actions: https://github.com/YOUR-USER/tickflow/actions

================================================================================
ETAP 7: POST-DEPLOYMENT
================================================================================

DOCUMENTATION:
  [ ] docs/VERCEL_README.md przeczytany
  [ ] docs/vercel-quick-start.md przeczytany
  [ ] docs/vercel-faq-scenarios.md zaznajomiony siƒô
  [ ] docs/DEPLOYMENT_SUMMARY.md przeczytany

GIT WORKFLOW (DZIENNE PRACE):
  [ ] Nowe feature: git checkout -b feature/my-feature
  [ ] Edycja kodu + npm run dev testing
  [ ] git push origin feature/my-feature
  [ ] Preview URL pojawia siƒô na Vercel
  [ ] Code review z team
  [ ] git checkout main + git merge + git push origin main
  [ ] Vercel auto-deployuje do produkcji ‚úì

EMERGENCY PROCEDURES:
  [ ] Wiem gdzie znale≈∫ƒá Build Logs (Vercel ‚Üí Deployments ‚Üí Logs)
  [ ] Wiem jak rollbackowaƒá (Deployments ‚Üí Previous version ‚Üí Redeploy)
  [ ] Wiem jak aktualizowaƒá zmienne (Project Settings ‚Üí Environment Variables)

================================================================================
JE≈öLI CO≈ö POWIA≈ÅO - QUICK DEBUGGING
================================================================================

Problem: Build fails
  ‚Üí Check: Vercel ‚Üí Deployments ‚Üí Build Logs
  ‚Üí Fix: RozwiƒÖ≈º lokalnie, git push origin main (Vercel spr√≥buje ponownie)

Problem: Application runs but shows error
  ‚Üí Check: Browser Console (F12)
  ‚Üí Check: Vercel ‚Üí Deployments ‚Üí Runtime Logs

Problem: Real-time not working
  ‚Üí Check: Supabase ‚Üí Project Settings ‚Üí Realtime ‚Üí Enabled?
  ‚Üí Check: Zmienne NEXT_PUBLIC_SUPABASE_URL i ANON_KEY ustawione?

Problem: Database connection error
  ‚Üí Check: DATABASE_URL w Vercel Environment Variables
  ‚Üí Check: Supabase Database status

Problem: Missing Environment Variable error
  ‚Üí Check: Project Settings ‚Üí Environment Variables
  ‚Üí Add: BrakujƒÖcƒÖ zmiennƒÖ
  ‚Üí Click: Redeploy

Wiƒôcej: Przeczytaj docs/vercel-faq-scenarios.md

================================================================================
WA≈ªNE RZECZY DO ZAPAMIƒòTANIA
================================================================================

1. git push origin main = Automatycznie deployuje na PRODUKCJƒò
2. git push origin feature/* = Tworzy PREVIEW (NIE deployuje na prod)
3. .env.local NIGDY nie commituj! (jest w .gitignore)
4. SUPABASE_SERVICE_ROLE_KEY = Production ONLY! Nigdy w Preview!
5. Deploy zajmuje ~30 sekund od push do live
6. Zmienne Vercel sƒÖ enkryptowane i bezpieczne

================================================================================
PRZYDATNE LINKI
================================================================================

Documentation:
  üìñ docs/VERCEL_README.md - START HERE
  ‚ö° docs/vercel-quick-start.md - Quick 10-minute guide
  üìö docs/vercel-deployment.md - Full comprehensive guide
  üîê docs/vercel-env-setup.md - Environment variables guide
  ‚ùì docs/vercel-faq-scenarios.md - FAQ & real scenarios
  üìä docs/vercel-flow-diagram.md - Diagrams & visual flows

External:
  üåê https://vercel.com/dashboard - Vercel Console
  üåê https://supabase.com/dashboard - Supabase Console
  üåê https://github.com/YOUR-USER/tickflow - GitHub Repo
  üåê https://tickflow.vercel.app - PRODUCTION APP

Project Documentation:
  üìñ .ai/prd.md - Product Requirements
  üõ†Ô∏è .ai/tech-stack.md - Technology Stack

================================================================================
NOTES
================================================================================

Build time: _____ seconds
First deployment date: _____________
Production URL: https://tickflow.vercel.app
Custom domain: _____________
Issues encountered: _______________________

================================================================================

‚úÖ GOTOWE DO PRODUKCJI!

Teraz wystarczy:
  git push origin main

I aplikacja sama siƒô zaktualizuje na produkcji! üöÄ

================================================================================
Printed: ____________
Last Updated: 16 pa≈∫dziernik 2025
Version: 1.0
Status: ‚úÖ Production Ready
================================================================================
